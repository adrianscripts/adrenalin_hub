local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ðŸ’• ADRENALIN HUB | PS99",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Loading script..",
   LoadingSubtitle = "By adrian",
   Theme = "Ocean", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = true,
   DisableBuildWarnings = true, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "adrenalin_hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "https://discord.gg/s2pPm69ZAG", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "ðŸ’• ADRENALIN HUB | KEY SYSTEM",
      Subtitle = "Key System",
      Note = "discord.gg/s2pPm69ZAG", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raGJUwSW"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local UpdatesTab = Window:CreateTab("ðŸ†• | Updates", nil) -- Title, Image
local UpdatesSection = UpdatesTab:CreateSection("Newest (2025.02.09)")
local Label = UpdatesTab:CreateLabel("[+] Bug fixes", nil, Color3.fromRGB(255, 255, 255), false)
local Label = UpdatesTab:CreateLabel("[+] New features! (Local, Settings)", nil, Color3.fromRGB(255, 255, 255), false)

local LocalTab = Window:CreateTab("ðŸ‘¤ | Local", nil) -- Title, Image
local LocalSection = LocalTab:CreateSection("ðŸš¶ Walkspeed")
-- player speed scripts:

local Slider = LocalTab:CreateSlider({
   Name = "Set walkspeed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
 game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
    end,
})


local LocalSection = LocalTab:CreateSection("ðŸ¦˜ Jumpheight")
-- player jumps scripts:

local Slider = LocalTab:CreateSlider({
   Name = "Set jumpheight",
   Range = {0, 300},
   Increment = 10,
   Suffix = "Bananas",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})


local LocalSection = LocalTab:CreateSection("Noclip")

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Test")

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Test")

local SettingsTab = Window:CreateTab("ðŸ”§ | Settings", nil) -- Title, Image
local SettingsSection = SettingsTab:CreateSection("Panic button")
local Label = SettingsTab:CreateLabel("The panic button will close the script once the keybind is pressed.", nil, Color3.fromRGB(255, 255, 255), false) -- Title, Icon, Color, IgnoreTheme
-- SettingsTab things:
-- Panic button(with keybind):
local Keybind = SettingsTab:CreateKeybind({
   Name = "Panic button",
   CurrentKeybind = "L",
   HoldToInteract = false,
   Flag = "Keybind1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Keybind)
       -- script:
   Rayfield:Destroy()
   end,
})

local CredsTab = Window:CreateTab("ðŸ’« | Credits", nil) -- Title, Image
local CredsSection = CredsTab:CreateSection("Credits")
-- CredsTab things:
local Input = CredsTab:CreateInput({
   Name = "Developers:",
   CurrentValue = "adrian",
   PlaceholderText = "adrian",
   RemoveTextAfterFocusLost = true,
   Flag = "nil",
   Callback = function(Text)
   -- The function that takes place when the input is changed
   -- The variable (Text) is a string for the value in the text box
   end,
})


Rayfield:Notify({
   Title = "ðŸ’• ADRENALIN HUB ðŸ’•",
   Content = "Thank you for choosing us!",
   Duration = 5,
   Image = nil,
})
